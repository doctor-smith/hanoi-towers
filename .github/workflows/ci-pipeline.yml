name: CI Pipeline Hanoi Towers
on:
  pull_request:
    branches:
      - master
      - develop
      - workflow-test
    types:
      - opened # whenever a pr is created
      - synchronize # whenever something is pushed to an open pr
      #- closed

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest # there might be a better option
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # Rest shall only run if there are changes in the backend-module
      - name: Setup JDK
        run: echo "Setting up JDK..."
      - name: Setup Gradle Project
        run: echo "Setting up Gradle Project..."
      - name: Lint
        run: echo "Linting kotlin modules"
      - name: Run Tests
        run: echo "Running Tests"

  build-and-test-frontend:
    runs-on: ubuntu-latest # there might be a better option
    outputs:
      lint: ${{ steps.lint.outputs.result }}
      build: ${{ steps.build.outputs.result }}
      test: ${{ steps.test.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # Rest shall only run if there are changes in the frontend-module
      - name: Setup JDK
        run: echo "Setting up JDK..."
      - name: Setup Gradle Project
        run: echo "Setting up Gradle Project..."
      - name: Lint
          id: lint
          run: |
            echo "Linting kotlin modules"
            echo "result=success" >> "$GITHUB_OUTPUT"
      - name: Build Project
        id: build
        run: |
          echo "Linting kotlin modules"
          echo "result=success" >> "$GITHUB_OUTPUT"
      - name: Run Tests
        id: test
        run: |
          echo "Running Tests"
          echo "result=success" >> "$GITHUB_OUTPUT"
      - name: Output Results
        run:
  report:
    needs:
      - build-and-test-frontend
      - build-and-test-backend
    runs-on: ubuntu-latest # there might be a better option
    steps:
      - env:
          FE_LINT: ${{ needs.build-and-test-frontend.outputs.lint }}
          FE_BUILD: ${{ needs.build-and-test-frontend.outputs.build }}
          FE_TEST: ${{ needs.build-and-test-frontend.outputs.test }}
        run: |
          echo "fe.lint.result = $FE_LINT"
          echo "fe.build.result = $FE_BUILD"
          echo "fe.test.result = $FE_TEST"